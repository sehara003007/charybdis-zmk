#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUFU 1
#define SYM 2
#define NAV 3
#define MED 4
#define POI 5
#define SCR 6
#define SNI 7

&sl { release-after-ms = <250>; };

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/*
#include <input/processors.dtsi>
#include "charybdis.dtsi"
*/


&mkp_input_listener {
    input-processors = <&zip_temp_layer 5 10000>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };

    combos2 {
        compatible = "zmk,combos";

        esccombos2 {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <18 19>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
  &kp Q        &kp W        &kp E                 &kp R          &kp T       &kp Y                  &kp U                  &kp I         &kp O        &kp P
  &hml LGUI A  &hml LALT S  &hml LCTRL D          &hml LSHFT F   &kp G       &kp H                  &hml RSHFT J           &hml RCTRL K  &hml RALT L  &hml RGUI SEMICOLON
  &lt POI Z    &kp X        &kp C                 &kp V          &kp B       &kp N                  &kp M                  &kp COMMA     &kp DOT      &lt POI SLASH
                            &lt MED LEFT_COMMAND  &lt NAV SPACE  &sl NUFU    &hml LEFT_SHIFT ENTER  &lt SYM RIGHT_COMMAND
            >;
        };

        NuFu {
            label = "Numeral/Function";
            bindings = <
  &bt BT_NXT    &kp F7  &kp F8  &kp F9  &kp F12    &kp KP_MULTIPLY  &kp N7  &kp N8  &kp N9  &kp DELETE
  &bt BT_SEL 1  &kp F4  &kp F5  &kp F6  &kp F11    &kp MINUS        &kp N4  &kp N5  &kp N6  &kp BACKSPACE
  &bt BT_SEL 2  &kp F1  &kp F2  &kp F3  &kp F10    &kp PLUS         &kp N1  &kp N2  &kp N3  &kp PERIOD
                        &trans  &trans  &trans     &kp EQUAL        &kp N0
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
  &kp TILDE  &kp AMPS  &kp STAR   &kp QUESTION  &kp PLUS     &trans  &kp LBRC  &kp RBRC  &trans   &kp PIPE
  &kp MINUS  &kp DLLR  &kp PRCNT  &kp CARET     &kp EQUAL    &trans  &kp LPAR  &kp RPAR  &kp DQT  &kp APOS
  &kp UNDER  &kp EXCL  &kp AT     &kp HASH      &kp GRAVE    &trans  &kp LBKT  &kp RBKT  &trans   &kp BSLH
                       &trans     &trans        &trans       &trans  &trans
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
  &trans  &trans  &trans          &trans          &trans    &trans    &trans         &kp TAB      &trans     &kp DELETE
  &trans  &trans  &msc SCRL_DOWN  &msc SCRL_UP    &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp BACKSPACE
  &trans  &trans  &trans          &msc SCRL_DOWN  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp INS
                  &trans          &trans          &trans    &trans    &trans
            >;
        };

        Media {
            label = "Media";
            bindings = <
  &trans      &trans        &bt BT_CLR_ALL  &trans            &trans        &trans      &trans            &bt BT_CLR_ALL  &trans        &trans
  &kp C_PREV  &kp C_VOL_DN  &kp C_MUTE      &kp C_VOL_UP      &kp C_NEXT    &kp C_PREV  &kp C_VOL_DN      &kp C_MUTE      &kp C_VOL_UP  &kp C_NEXT
  &trans      &trans        &trans          &trans            &trans        &trans      &trans            &trans          &trans        &trans
                            &trans          &kp C_PLAY_PAUSE  &kp C_STOP    &kp C_STOP  &kp C_PLAY_PAUSE
            >;
        };

        Pointer {
            label = "Pointer";
            bindings = <
  &trans    &trans    &trans     &trans     &trans       &trans     &trans     &trans     &trans    &trans
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans       &trans     &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
  &trans    &mo SCR   &mo SNI    &trans     &trans       &trans     &trans     &tog SNI   &tog SCR  &trans
                      &mkp LCLK  &mkp RCLK  &mkp MCLK    &mkp MCLK  &mkp LCLK
            >;
        };

        Scroll {
            label = "Scroll";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        Sniper {
            label = "Sniper";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
